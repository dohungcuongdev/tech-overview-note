singleton : This is the default Scope, which means that there will be only one instance in the entire spring container, or in the entire java application.
prototype : Multi â€“ instance type, container will create a new bean instance for every request to a bean by client.
request : For spring web application only. When a web action request an instance of this bean, it will be created by Spring container, and then saved in HttpServletRequest object. When the request complete, the bean will be out of scope and wait for garbage collection.
session : This bean scope type is valid only in web application also. Defined with this scope, when a web action request this bean, Spring container will also create an instance of it then save it in HttpSession object. When the session timeout or invalidate, the bean is invalidate also.
application : This is also for web application only. This kind of bean will exist in the web application context. One web application will has only one instance.
globalSession : When you use Portlet container to create Portlet application, there are a number of portlets in it. Each portlet will save variable in their own sesion by default. But how to share a global variable object to all the portlets in this Portlet application? Then global-session concept come out. You can give your spring bean global-session scope, then it can be accessed by all portlet in the application. This scope is not so much different from session scope in Servlet based java web applications.